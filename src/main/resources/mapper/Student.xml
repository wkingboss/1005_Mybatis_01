<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--该文件是用于进行数据库表中某个表的操作声明,
相当于dao层中的实现类,例如以前写的studentDaoImpl
里面定义一系列操作数据库表的sql语句
namespace:声明该操作文件对外提供的接口类路径是谁
          相当于StudentDao接口-->
<mapper namespace="com.ssm.mapper.StudentMapper">
    <!--select:查询标签,执行查询语句,常用属性:
    id:唯一标识该操作的名称,对应接口(StudentDao)中的
       某个方法
    parameterType(parameterMap):定义sql语句中需要的参数,即条件查询中的参数
                  对应接口中的方法的参数列表,注意
                  接口中的参数只能有一个,对于多个参数可以封装到一个
                  pojo类中
    result(resultMap):返回结果声明,对应一个mapper,以key-value的形式返回的数据-->
    <select id="selectAll"
            resultType="com.ssm.domain.Student">
     SELECT * FROM Student
    </select>

    <!--分页查询
    在mapper文件中用#{属性名}的方式取传递过来的参数值,
    如果传过来的参数是一个基本类型则可以用#{value}获取;
    如果是pojo,则通过#{属性名获取某个值};-->
    <select id="pageSelect"
            parameterType="com.ssm.page.PageBean"
            resultType="com.ssm.domain.Student">
       SELECT * FROM Student
       WHERE sname like'%${parameter.sname}%'
       limit #{startIndex}, #{pageSize}
    </select>
<select id="getTotalRecord"
        resultType="java.lang.Integer"
        parameterType="com.ssm.page.PageBean">
    SELECT COUNT(sid) FROM student
</select>



</mapper>